/*
  R a n d S e q . h

  This module defines an object that generates the same sequence of random numbers (of the same
  numerical type)from run to run no matter what else happens between calls.  The generic
  base class for this abstraction is `RandSeq<ElemT>`, which will generation a random sequences 
  of type ElemT.
  
  However, because the code for generating a random between 0 and `MaxInt` is different than 
  the code for generating a `float` between 0 and 1, the code for generating the next random 
  number is specified in a specialization of the `RandSeq<ElemT>`.  This module provides four
  specializations: RandSeqInt, RandSeqLong, RandSeqFloat, and RandSeqDouble.

  The ability to change the seed in the middle of a sequence was not included, because it seemed to
  encourage misuse of the class.  Specifically, switching between sequences by extracting the
  internal state and random sequence, storing it externally, and then later re-injecting the saved
  state in order to resume the same random sequence.  If for some random number generator this is
  the required method of maintaining multiple independent sequences then this should be handled 
  internal to the objects generated by the random number generating factory, not by the user.
 */

#pragma once

#include <random>

typedef std::mt19937_64 CoreGenT;

// ************************************
template<typename ElemT>
class RandSeq {
public:
  virtual ElemT operator() () = 0;
};

// ************************************
class RandSeqInt : public RandSeq<int> {
protected:
  std::uniform_int_distribution<> dist;
  CoreGenT coreGen;
  int seed;

public:
  RandSeqInt(int low, int high);
  RandSeqInt(int low, int high, int seed);

  int operator() ();
  int Seed();
};

// ************************************
class RandSeqFloat : public RandSeq<float> {
protected:
  std::uniform_real_distribution<float> dist;
  CoreGenT coreGen;
  int seed;

public:
  RandSeqFloat(float low, float high);
  RandSeqFloat(float low, float high, int seed);

  float operator() ();
  int Seed();
};

#include "RandSeq.inc.h"